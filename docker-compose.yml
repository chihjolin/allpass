version: '3.8'

services:
  postgis:
    image: postgis/postgis:16-3.4
    container_name: allpass_postgis_container
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME:-allpass_db}
      POSTGRES_USER: ${DB_USER:-allpass_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-allpass}
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_HOST_PORT:-15432}:5432"
    networks:
      - allpass
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-allpass_user} -d ${DB_NAME:-allpass_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: allpass_backend_container
    restart: always
    env_file:
      - ./.env
    environment:
      FLASK_HOST: ${FLASK_HOST:-0.0.0.0}
      FLASK_PORT: ${FLASK_PORT:-5000}
      FLASK_DEBUG: ${FLASK_DEBUG:-True}
      POSTGRES_HOST: ${DB_HOST:-postgis}
      POSTGRES_PORT: ${DB_PORT:-5432}
      POSTGRES_DB: ${DB_NAME:-allpass_db}
      POSTGRES_USER: ${DB_USER:-allpass_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-allpass}
    ports:
      - "${FLASK_PORT:-5000}:5000"
    networks:
      - allpass
    depends_on:
      postgis:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: allpass_frontend_container
    restart: always
    env_file:
      - ./.env
    ports:
      - "${WEB_PORT:-80}:80"
    networks:
      - allpass
    depends_on:
      - backend

volumes:
  postgis_data:
    name: my_postgis_data

networks:
  allpass:
    #external: True
    driver: bridge
